c
author_params
c
book_params
c
book_params
exit
c
@book.errors
@book.valid?
@book
c
post v1_books_path, headers: auth_header(user), params: book_params
c
exit
c
@book
c
post v1_books_path, headers: auth_header(user), params: book_params
c
post v1_books_path, headers: auth_header(user), params: book_params
c
expected_books.pluck(:id)
service.records.pluck(:id)
c
service.records.pluck(:id)
expected_books.pluck(:id)
c
service.records.pluck(:id)
c
service.records.pluck(:id)
expected_books.pluck(:id)
expected_books
expected_books.count
service.records.count
service.records
c
body_json['authors'].first['author']['books']
body_json['authors'].first['author']
body_json['authors'].first['author']]
body_json['authors'].first[0]
body_json['authors'].first[1]
body_json['authors'].first
body_json['authors'].first['book']
body_json['authors'].first['books']
body_json['authors'].first
body_json['authors'].count
body_json['authors']
c
body_json['authors'].first[1]['books'].count
body_json['authors'].first[1]['books']
body_json['authors'].first[1]
body_json['authors'].first
body_json['authors']['books']
body_json['authors'].count
body_json['authors']
c
body_json['authors']
body_json['authors'].count
body_json['authors'].first.first
body_json['authors'].first.flatten
body_json['authors'].first('author')
body_json['authors'].first
body_json['authors'].first.body_json
body_json['authors'].first.body_json['author']
body_json['authors'].first['author']
body_json['authors'].first
body_json['authors']
body_json['authors'].first['books']
body_json['authors'].first.books
body_json['authors'].first
body_json['authors'].first['books']
c
body_json['authors'].first
c
body_json['authors'].first
body_json['authors'].first['books']
body_json['authors'].first
body_json['book']
body_json['books']
body_json
body_json['authors'].first
c
body_json['books']
c
body_json['authors'].first
body_json['authors']
body_json
c
body_json
c
body_json
body_json['author']
c
post v1_authors_path, headers: auth_header(user), params: author_params
c
attributes_for(:author).as_json
attributes_for(:author)
attributes_for(:author).to_json
c
attributes_for(:author).to_json
attributes_for(:author)
attributes_for(:author) }
author_params
author_params.to_json
author_params
Author.create(author_params.to_json)
Author.create(author_params)
author_params
c
post v1_authors_path, headers: auth_header(user), params: author_params
c
post v1_authors_path, headers: auth_header(user), params: author_params
c
post v1_authors_path, headers: auth_header(user), params: author_params
c
post v1_authors_path, headers: auth_header(user), params: author_params
[200~          post v1_authors_path, headers: auth_header(user), params: author_params
author_params
c
authors.as_json
authors
*authors.as_json
body_json['authors']
body_json
c
body_json
c
Author.all
c
v1_authors_path
authors
c
response.body
response
c
body_json
c
body_json
body_jsonn
c
body_json
